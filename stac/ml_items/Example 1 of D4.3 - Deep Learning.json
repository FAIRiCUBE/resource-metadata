{
    "type": "Feature",
    "stac_version": "1.0.0",
    "stac_extensions": [
        "https://stac-extensions.github.io/ml-model/v1.0.0/schema.json"
    ],
    "id": "lenet_classifier",
    "collection": "ML collection",
    "geometry": {
        "type": "Polygon",
        "coordinates": [
            [
                [
                    -180,
                    -90
                ],
                [
                    -180,
                    90
                ],
                [
                    180,
                    90
                ],
                [
                    180,
                    -90
                ],
                [
                    -180,
                    -90
                ]
            ]
        ]
    },
    "bbox":[-180, -90, 180, 90],
    "properties": {
        "provider": "epsit",
        "use-case": "common",
        "title": "LeNet Classifier",
        "description": "Multi-layer Convolutional Neural Network for image classification ",
        "main-category": "Deep Learning",
        "datetime": "2023-04-04",
        "keywords": [
            "classification",
            "CNN",
            "LeNet"
        ],
        "platform": "Google Colab",
        "framework": "Keras",
        "algorithm": "LeNet",
        "license": "CC-BY-4.0",
        "ml-model:type": "ml-model",
        "ml-model:learning_approach": "supervised",
        "ml-model:prediction_type": "classification",
        "ml-model:architecture": "CNN - Convolutional-Neural-Network",
        "ml-model:training-processor-type": "gpu",
        "ml-model:training-os": "linux",
        "use-constraints": "",
        "model-configuration": ""
    },
    "links": [
        {
            "rel": "root",
            "href": "./catalog.json",
            "type": "application/json",
            "title": "Root"
        },
        {
            "rel": "parent",
            "href": "./catalog.json",
            "type": "application/json",
            "title": "ML collection"
        },
        {
            "href": "https://en.wikipedia.org/wiki/LeNet",
            "rel": "about",
            "type": "text/html",
            "title": "Reference link"
        },
        {
            "href": "https://github.com/cozzolinoac11/wildfire_prediction/blob/main/ann.ipynb",
            "rel": "about",
            "type": "text/html",
            "title": "Implementation Example"
        }
    ],
    "assets": {
        "input-data-used": {
            "href": "https://public.epsilon-italia.it/FAIRiCUBE/wildfire-classification/data_numpy.zip",
            "type": "application/json",
            "title": "Input data used",
            "description": "Numpy arrays. (Perfectly) balanced classes.",
            "biases-and-ethical-aspects": "",
            "roles": [
                "data"
            ]
        },
        "model-checkpoint": {
            "href": "http://www.epsilon-italia.it/public/model.zip",
            "type": "application/octet-stream",
            "title": "Model",
            "description": "Keras model for wildfire or nowildfire classification. The model gets in input a dataset as numpy arrays (dimension 100x100x3) and returns the predicted labels.",
            "performance": "Accuracy score: 0.9505 (validation). Running time: 2 min for 23 training epochs with early stopping (total number of epochs: 50) on a gpu Nvidia a100. Modified hyperparameters: Input shape: (100,100,3); Optimizer: 'adam'; batch size: 128. Train-test-valid split: 70-15-15. Loss function: sparse_categorical_crossentropy.",
            "roles": [
                "ml-model:checkpoint"
            ]
        }
    }
}
